# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh 
############################################
#           zsh config
############################################
#By default, at the right of the powerline are displayed the date and the time. If you don't want date or time, you can choose what you want to display:
#POWERLINE_RIGHT_B="time replacement"
#
#Or if you don't want to display anything: #POWERLINE_RIGHT_B="none"
#If you want to display date next to time: POWERLINE_RIGHT_A="date"

#If you want to display exit-code of last command next to time:
# OWERLINE_RIGHT_A="exit-status"
#or if you want it to appear only on faulty runs:
#POWERLINE_RIGHT_A="exit-status-on-fail"

#If you want to display date or non-zero-exit-code of last command next to time:
#POWERLINE_RIGHT_A="mixed"
#If you want to display a custom text next to time:
#
#POWERLINE_RIGHT_A="blackfire.io"
#If you want to change the color of the POWERLINE_RIGHT_A element:
#
#POWERLINE_RIGHT_A_COLOR_FRONT="black"
#POWERLINE_RIGHT_A_COLOR_BACK="red"
#If you want to change the date format to what you want:
#
#POWERLINE_DATE_FORMAT="%D{%d-%m}"
#If you don't want to display your username (the green or red (root) colors are still there):
#
#POWERLINE_HIDE_USER_NAME="true"
#If you don't want to display your hostname (the green or red (root) colors are still there):
#
#POWERLINE_HIDE_HOST_NAME="true"
#If you only want to see the first part of the hostname (not the fqdn):
#
POWERLINE_SHORT_HOST_NAME="true"
#If you want to hide git prompt status (new files, modified files, unmerged files, etc):
#
#POWERLINE_HIDE_GIT_PROMPT_STATUS="true"
#If you want to hide the right hand side prompt completely:
#
#POWERLINE_DISABLE_RPROMPT="true"
#If you don't want the blank line before the prompt:
#
#POWERLINE_NO_BLANK_LINE="true"
#If you want full path:
#
#POWERLINE_PATH="full"
#If you want to display ~ instead of your full path:
#
POWERLINE_PATH="short"
#If you want to customize the current path display (overrides full path above):
#
#POWERLINE_CUSTOM_CURRENT_PATH="%3~"
#If you want git info on right instead of left:
#
#POWERLINE_SHOW_GIT_ON_RIGHT="true"
#If you want to tell if you are in a remote SSH session:
#
#POWERLINE_DETECT_SSH="true"
#Also you can change the icons of GIT info, default values are:
#
#POWERLINE_GIT_CLEAN="✔"
#POWERLINE_GIT_DIRTY="✘"
#POWERLINE_GIT_ADDED="%F{green}✚%F{black}"
#POWERLINE_GIT_MODIFIED="%F{blue}✹%F{black}"
#POWERLINE_GIT_DELETED="%F{red}✖%F{black}"
#POWERLINE_GIT_UNTRACKED="%F{yellow}✭%F{black}"
#POWERLINE_GIT_RENAMED="➜"
#POWERLINE_GIT_UNMERGED="═"
#消除历史记录中的重复条目
setopt HIST_IGNORE_DUPS
HISTSIZE=10000
SAVEHIST=10000
# 在命令前添加空格，不将此命令添加到记录文件中
#setopt hist_ignore_space
#在多个 zsh 中及时共享历史记录的：
#setopt SHARE_HISTORY
#################################################
#           zsh config end
#################################################


# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
ZSH_THEME="powerline"
#ZSH_THEME="kardan"
#ZSH_THEME="norm"
#ZSH_THEME="risto"
#ZSH_THEME="simple"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(vi-mode git jump mvn gradle brew osx tmux zsh_reload colored-man-pages sudo zsh_reload z extract zsh-autosuggestions docker docker-compose docker-machine )
#plugins=(vi-mode git jump osx mvn gradle)

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
#

# 别名绑定
#命令绑定
#alias vi='vim'
#alias vim='vim'
#alias vim='nvim'
alias grep='grep --color=auto'
alias ll='ls -l'
alias lm='l | more'
alias rmrf='rm -rf'
alias tail100='tail -n100 -f '


alias vizsh='vim ~/.zshrc'
alias sozsh='source ~/.zshrc'
alias data='cd /data'
alias work='cd ~/work'
alias pwgen30='pwgen 30 -y'

# gradle
alias gradleinitjava='gradle init --type java-library'
alias gradlecleanidea='gradle cleanIdea'

# host
alias mypi='ssh xx@xxx'


## proxy oepn and close
# git 
alias proxyopengit='git config --global http.proxy http://127.0.0.1:9999; git config --global https.proxy https://127.0.0.1:9999'
alias proxyclosegit='git config --global --unset http.proxy; git config --global --unset https.proxy'

# shell
alias proxyopenshell='export ALL_PROXY=socks5://127.0.0.1:9999'
alias proxycloseshell='export ALL_PROXY='

# npm
alias npmproxyopen='export npm_config_proxy=http://127.0.0.1:9999'
alias npmproxyclose='export npm_config_proxy='

## tmux
alias tmuxt='tmux attach -t '
alias tmuxl='tmux ls'
alias tmuxn='tmux new-session -s '

## docker 
# Linux docker 需要 sudo 
# dcp nginx:/home/nginx/a.html .
alias dcp='sudo docker cp '
alias dps='sudo docker ps '
alias dpsa='sudo docker ps -a'
alias dpid='sudo docker inspect --format {{.State.Pid}} '
alias dtail='sudo docker logs --tail 1000 -f'
alias dexec='dexec() { if [ $# != 1 ] ; then echo "USAGE: $0 docker_name_or_pid" ; else ; sudo docker exec -it "$1" /bin/bash ; fi } ; dexec'
## thanks for https://gist.github.com/spalladino/6d981f7b33f6e0afe6bb
alias dmysqldump='dmysqldump() { if [ $# != 4 ] ; then echo "USAGE: $0 docker_name_or_pid mysql_username mysql_password mysql_dbname" ; else ; sudo docker exec "$1" /usr/bin/mysqldump -u$2 -p$3 "$4" ; fi }; dmysqldump '
alias dmysqlimport='dmysqlimport() { if [ $# != 5 ] ; then echo "USAGE: $0 docker_name_or_pid mysql_username mysql_password mysql_dbname mysql_dbdump_file" ; else ; cat "$5" | sudo docker exec -i "$1" /usr/bin/mysql -u$2 -p$3 "$4" ; fi }; dmysqlimport'
alias dmysql='dmysql() { if [ $# != 3 ] ; then echo "USAGE: $0 docker_name_or_pid mysql_username mysql_password " ; else ; sudo docker exec -it "$1" /usr/bin/mysql -u$2 -p$3 ; fi };dmysql '

## K3S ###
alias k3sallpods='k3s kubectl get pods -A'
alias k3sallservices='k3s kubectl get services -A'
alias k3spod='k3spods() { if [ $# != 1 ] ; then echo "USAGE: $0 env " ; else ; k3s kubectl -n "$1" get pod; fi };k3spods'
alias k3sservice='k3sservice() { if [ $# != 1 ] ; then echo "USAGE: $0 env " ; else ; k3s kubectl -n "$1" get service; fi };k3sservice'
alias k3slogs='k3slogs() { if [ $# != 2 ] ; then echo "USAGE: $0 pods_name playground " ; else ; k3s kubectl logs -f "$1" -n "$2" ; fi };k3slogs '
alias k3snamespace='k3s kubectl get namespaces'


#utils
alias netstatls='f() { sudo netstat -tulpn };f '

alias eshealth='f() { curl $1/_cat/health };f '
alias espetty='f() { curl $1/\?pretty };f '

## java
alias javapverbose='javap -verbose '

#ping
alias ping1='ping 192.168.1.1'

#utils
alias netstatls='f() { sudo netstat -tulpn };f '

## java
alias javapverbose='javap -verbose '

#ping 
alias ping1='ping 192.168.1.1'

#扩展名绑定
alias -s conf=nvim
alias -s json=nvim
alias -s html=nvim
alias -s md=nvim

#tmux_init() { }
# 判断是否已有开启的tmux会话，没有则开启
#if which tmux 2>&1 >/dev/null; then
#    test -z "$TMUX" && (tmux attach || tmux_init)
#fi


